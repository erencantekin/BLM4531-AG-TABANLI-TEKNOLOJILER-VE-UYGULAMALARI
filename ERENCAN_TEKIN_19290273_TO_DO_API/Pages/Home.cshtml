@page
@model ERENCAN_TEKIN_19290273_TO_DO_API.Pages.HomeModel
@{
}

<br>
<h2>List Of Tasks</h2>
<body>
    <main class="table">
        <section class="table__header">
            <a class='btn btn-primary btn-sm' href='/Create'>New Task</a>
            <div class="input-group">
                <input type="search" placeholder="Search Task In All Tasks...">
            </div>
            <a class="btn btn-primary btn-sm" href="/Index">Log Out</a>
        </section>

        <section class="table__body">
            <table>

                <thead>
                    <tr>
                        <th>ID <span class="icon-arrow">&UpArrow;</span> </th>
                        <th>Task Title <span class="icon-arrow">&UpArrow;</span> </th>
                        <th>Task Description <span class="icon-arrow">&UpArrow;</span> </th>
                        <th>Task Priority <span class="icon-arrow">&UpArrow;</span> </th>
                        <th>Created At <span class="icon-arrow">&UpArrow;</span> </th>
                    </tr>
                </thead>
                

                <tbody>
                    @foreach (var item in Model.listToDoTasks)
                    {
                        <tr>
                            <td> @item.TaskID </td>
                            <td> @item.TaskTitle </td>
                            <td> @item.TaskDescription </td>
                            <td> @item.TaskPriority </td>
                            <td> @item.CreatedAt </td>
                            <td>
                                <a class="btn btn-primary btn-sm" href="/Edit?TaskID=@item.TaskID&UserID=@item.UserID">Edit</a>
                                <a class="btn btn-danger btn-sm" href="/Delete?TaskID=@item.TaskID&UserID=@item.UserID">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <style>

                * {
                    margin: 0;
                    padding: 0;
                    box-sizing: border-box;
                    font-family: sans-serif;
                }

                .table__header {
                    width: 100%;
                    height: 10%;
                    background-color: #fff4;
                    padding: .8rem 1rem;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                }

                .table__header .input-group {
                    width: 35%;
                    height: 100%;
                    background-color: #fff5;
                    padding: 0 .8rem;
                    border-radius: 2rem;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    transition: .2s;
                }

                .table__header .input-group:hover {
                    width: 45%;
                    background-color: #fff8;
                    box-shadow: 0 .1rem .4rem #0002;
                }

                body {
                    min-height: 100vh;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    background: linear-gradient(to right, #eeddcc 0%,#9fd9e6 100%);
                }

                main.table {
                    width: 82vw;
                    height: 90vh;
                    background-color: #fff5;
                    backdrop-filter: blur(7px);
                    box-shadow: 0 .4rem .8rem #0005;
                    border-radius: .8rem;
                    overflow: hidden;
                }
                
                .table__header .input-group input {
                    width: 100%;
                    padding: 0 .5rem 0 .3rem;
                    background-color: transparent;
                    border: none;
                    outline: none;
                }

                .table__body {
                    width: 95%;
                    max-height: calc(89% - 1.6rem);
                    background-color: #fffb;
                    margin: .8rem auto;
                    border-radius: .6rem;
                    overflow: auto;
                }
                
                .table__body::-webkit-scrollbar {
                    width: 0.5rem;
                    height: 0.5rem;
                }

                .table__body::-webkit-scrollbar-thumb {
                    border-radius: .5rem;
                    background-color: #0004;
                    visibility: hidden;
                }

                .table__body:hover::-webkit-scrollbar-thumb {
                    visibility: visible;
                }

                table {
                    width: 100%;
                }


                table, th, td {
                    border-collapse: collapse;
                    padding: 1rem;
                    text-align: left;
                }

                thead th {
                    position: sticky;
                    top: 0;
                    left: 0;
                    background-color: #f7dfe6;
                    cursor: pointer;
                    text-transform: capitalize;
                }

                tbody tr:nth-child(even) {
                    background-color: #0000000b;
                }

                tbody tr {
                    --delay: .1s;
                    transition: .5s ease-in-out var(--delay), background-color 0s;
                }

                tbody tr.hide {
                    opacity: 0;
                    transform: translateX(100%);
                }

                tbody tr td{
                    transition: .2s ease-in-out;
                }

                tbody tr.hide td{
                    padding: 0;
                    font: 0 / 0 sans-serif;
                    transition: .2s ease-in-out .5s;
                }


                thead th span.icon-arrow {
                    display: inline-block;
                    width: 1.3rem;
                    height: 1.3rem;
                    border-radius: 50%;
                    border: 1.4px solid transparent;
                    text-align: center;
                    font-size: 1rem;
                    margin-left: .5rem;
                    transition: .2s ease-in-out;
                }

                thead th:hover span.icon-arrow {
                    border: 1.4px solid #0000ff;
                }

                thead th.active span.icon-arrow {
                    background-color: #0000ff;
                    color: #fff;
                }

                thead th.asc span.icon-arrow {
                    transform: rotate(180deg);
                }

                thead th.active {
                    color: #0000ff;
                }
            </style>
        </section>

    </main>
    <script>


        const search = document.querySelector('.input-group input'),
            table_rows = document.querySelectorAll('tbody tr'),
            table_headings = document.querySelectorAll('thead th');

        
        search.addEventListener('input', searchTable);
        function searchTable() {

            table_rows.forEach((row, i) => {
                let table_data = row.textContent.toLowerCase(),
                    search_data = search.value.toLowerCase();

                row.classList.toggle('hide', table_data.indexOf(search_data) < 0);
                row.style.setProperty('--delay', i / 25 + 's');
            })

            document.querySelectorAll('tbody tr:not(.hide)').forEach((visible_row, i) => {
                visible_row.style.backgroundColor = (i % 2 == 0) ? 'transparent' : '#0000000b';
            });
        }

        

        table_headings.forEach((head, i) => {
            let sort_asc = true;
            head.onclick = () => {
                table_headings.forEach(head => head.classList.remove('active'));
                head.classList.add('active');

                document.querySelectorAll('td').forEach(td => td.classList.remove('active'));
                table_rows.forEach(row => {
                    row.querySelectorAll('td')[i].classList.add('active');
                })

                head.classList.toggle('asc', sort_asc);
                sort_asc = head.classList.contains('asc') ? false : true;

                sortTable(i, sort_asc);
            }
        })


        function sortTable(column, sort_asc) {
            [...table_rows].sort((a, b) => {
                let first_row = a.querySelectorAll('td')[column].textContent.toLowerCase(),
                    second_row = b.querySelectorAll('td')[column].textContent.toLowerCase();

                return sort_asc ? (first_row < second_row ? 1 : -1) : (first_row < second_row ? -1 : 1);
            })
                .map(sorted_row => document.querySelector('tbody').appendChild(sorted_row));
        }

    </script>
</body>

